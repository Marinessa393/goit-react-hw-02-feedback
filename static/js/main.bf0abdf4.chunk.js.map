{"version":3,"sources":["components/Statistics.js","components/Section.js","components/FeedbackOptions.js","components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","defaultProps","Section","props","title","children","FeedbackOptions","addVote","e","onLeaveFeedback","target","getAttribute","options","this","map","el","type","name","onClick","Component","App","state","handleCount","value","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","parseInt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAIA,SAASA,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,mCACGD,EAAQ,EACP,qBAAIE,UAAU,aAAd,UACE,6BACE,uCACQ,+BAAOL,SAGjB,6BACE,0CACW,+BAAOC,SAGpB,6BACE,sCACO,+BAAOC,SAGhB,oBAAGG,UAAU,gBAAb,oBACS,+BAAOF,OAEhB,oBAAGE,UAAU,gBAAb,gCACqB,iCAAOD,EAAP,cAIvB,qDAMRL,EAAWO,aAAe,CACxBN,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAUPL,QCxCAQ,MAVf,SAAiBC,GAAQ,IACfC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACf,OACE,qCACE,oBAAIL,UAAU,sBAAd,SAAqCI,IACpCC,MCLcC,E,4MACnBC,QAAU,SAAAC,GACR,EAAKL,MAAMM,gBAAgBD,EAAEE,OAAOC,aAAa,U,4CAGnD,WAAU,IAAD,OACCC,EAAYC,KAAKV,MAAjBS,QACR,OACE,mCACE,oBAAIZ,UAAU,oBAAd,SACGY,EAAQE,KAAI,SAAAC,GAAE,OACb,6BACE,wBAAQC,KAAK,SAASC,KAAMF,EAAIG,QAAS,EAAKX,QAA9C,SACGQ,iB,GAb4BI,aCmD9BC,E,4MA9CbC,MAAQ,CACN1B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPyB,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAQE,EAAUF,GAAS,O,EAIhCG,mBAAqB,WAAO,IAAD,EACM,EAAKL,MACpC,OAFyB,EACjB1B,KADiB,EACXC,QADW,EACFC,K,EAIzB8B,gCAAkC,WAAO,IAAD,EACP,EAAKN,MAA5B1B,EAD8B,EAC9BA,KAAMC,EADwB,EACxBA,QAASC,EADe,EACfA,IACvB,OAAO+B,SAAUjC,GAAQA,EAAOC,EAAUC,GAAQ,M,4CAGpD,WAAU,IAAD,EACwBgB,KAAKQ,MAA5B1B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,qCACE,cAAC,EAAD,CAASO,MAAM,wBAAf,SACE,cAAC,EAAD,CACEQ,QAAS,CAAC,OAAQ,UAAW,OAC7BH,gBAAiBI,KAAKS,gBAG1B,cAAC,EAAD,CAASlB,MAAM,aAAf,SACE,cAAC,EAAD,CACET,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,KAAKa,qBACZ3B,mBAAoBc,KAAKc,6C,GAvCnBR,aCFlBU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.bf0abdf4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      {total > 0 ? (\r\n        <ul className=\"stat__list\">\r\n          <li>\r\n            <p>\r\n              Good: <span>{good}</span>\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              Neutral: <span>{neutral}</span>\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              Bad: <span>{bad}</span>\r\n            </p>\r\n          </li>\r\n          <p className=\"stat__nonList\">\r\n            Total: <span>{total}</span>\r\n          </p>\r\n          <p className=\"stat__nonList\">\r\n            Positive Feedback: <span>{positivePercentage} %</span>\r\n          </p>\r\n        </ul>\r\n      ) : (\r\n        <p>Here is nothing...</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  total: 0,\r\n  positivePercentage: 0,\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nfunction Section(props) {\r\n  const { title, children } = props;\r\n  return (\r\n    <>\r\n      <h2 className=\"feedback__mainTitle\">{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nexport default class FeedbackOptions extends Component {\r\n  addVote = e => {\r\n    this.props.onLeaveFeedback(e.target.getAttribute('name'));\r\n  };\r\n\r\n  render() {\r\n    const { options } = this.props;\r\n    return (\r\n      <>\r\n        <ul className=\"feedback__buttons\">\r\n          {options.map(el => (\r\n            <li>\r\n              <button type=\"button\" name={el} onClick={this.addVote}>\r\n                {el}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import '../App.css';\nimport React, { Component } from 'react';\nimport Statistics from './Statistics';\nimport Section from './Section';\nimport FeedbackOptions from './FeedbackOptions';\nimport '../App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleCount = value => {\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    return parseInt((good / (good + neutral + bad)) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Leave Feedback PLZ :)\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.handleCount}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}